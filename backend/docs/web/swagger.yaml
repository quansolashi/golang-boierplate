basePath: /api
definitions:
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.LoginResponse:
    properties:
      access_token:
        type: string
      email:
        type: string
      id:
        type: integer
      last_accessed_at:
        type: string
      name:
        type: string
    type: object
  response.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  util.ErrorResponse:
    properties:
      detail:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: go-boier.vn
info:
  contact: {}
  description: Golang Boilerplate API.
  title: Golang Boilerplate API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: LoginRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: login
      tags:
      - Auth
  /auth/login/google/callback:
    post:
      consumes:
      - application/json
      description: login with Google callback
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: login with Google callback
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: list users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: user index
      tags:
      - User
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: detail user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: show user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
